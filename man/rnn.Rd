% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rnn-parsnip.R
\name{rnn}
\alias{rnn}
\title{General interface to recurrent neural network models}
\usage{
rnn(
  mode = "regression",
  timesteps = NULL,
  horizon = 1,
  learn_rate = 0.01,
  epochs = 50,
  hidden_units = NULL,
  dropout = NULL,
  batch_size = 32,
  scale = TRUE
)
}
\arguments{
\item{mode}{(character) Model mode, default: 'regression'}

\item{timesteps}{(integer or torchts::timesteps) Number of timesteps to look back}

\item{horizon}{(integer) Forecast horizon}

\item{learn_rate}{(numeric or dials::learn_rate) Learning rate}

\item{epochs}{(integer or dials::epochs) Number of epochs}

\item{hidden_units}{Number of hidden units}

\item{dropout}{(logical or dials::dropout) Flag to use dropout}

\item{batch_size}{(integer) Batch size}

\item{scale}{(logical) Scale input features}
}
\description{
General interface to recurrent neural network models
}
\examples{
library(torchts)
library(parsnip)
suppressMessages(library(dplyr))
library(rsample)

# Univariate time series
tarnow_temp <-
 weather_pl \%>\%
 filter(station == "TARNÃ“W") \%>\%
 select(date, temp = tmax_daily)

data_split <- initial_time_split(tarnow_temp)

rnn_model <-
   rnn(
     timesteps = 20,
     horizon = 1,
     epochs = 10,
     hidden_units = 32
   )

rnn_model <-
   rnn_model \%>\%
   fit(temp ~ date, data = training(data_split))


}
