% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/impl-recurrent-network.R
\name{recurrent_network_fit_formula}
\alias{recurrent_network_fit_formula}
\title{Basic RNN model for time series forecasting}
\usage{
recurrent_network_fit_formula(
  formula,
  data,
  optim = optim_adam(),
  batch_size = 1,
  n_epochs = 10,
  loss_fn = nnf_mse_loss,
  plugins = NULL
)
}
\arguments{
\item{optim}{An optimizer with arguments}

\item{plugins}{A list of additional objects to observe loss function values etc.

If using simple fix_xy, we do not any assumption about time and number of items.

data <- filter(experiment_data, item_id == "FOODS_1_001")

x <- filter(experiment_data, item_id == "FOODS_1_001")
x <- select(x, -value)
y <- select(filter(experiment_data, item_id == "FOODS_1_001"), value, item_id, date)
key <- "item_id"
index <- "date"
categorical_features <- c("wday", "month", "snap_CA")

catch <- function(optim){browser()}
catch(optim_adam(lr = 0.001))

model <- recurrent_fit(x, y, key = "item_id", index = "date", n_epochs = 1000)
fcast <- predict_basic_rnn_impl(model, x, key = "item_id", index = "date")
View(bind_cols(y, fcast))

recurrent_network_fit_formula(value ~ key(item_id) + index(date) + . + categ(wday, month, fbwd(snap_CA)),
data = data)

Idea:
\itemize{
\item rnn_reg for parsnip
\item ts_rnn for fable (ts prefix for fable)
}

Po dniu można grupować. Co, jeśli możemy te wiedzę przekazać bezpośrednio do sieci?
Może nie musiałaby się tego uczyć?}

\item{x}{Input features}

\item{y}{Targets}

\item{categorical_features}{List of categorical feature columns from data.frame x}
}
\description{
Basic RNN model for time series forecasting
}
