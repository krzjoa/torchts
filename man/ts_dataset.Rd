% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ts-dataset-v1.R, R/ts-dataset.R
\name{ts_dataset}
\alias{ts_dataset}
\title{Create a time series dataset from a \code{torch_tensor} matrix}
\usage{
ts_dataset(
  data,
  timesteps,
  horizon,
  index,
  jump = horizon,
  past_spec = list(x = NULL),
  future_spec = list(y = NULL),
  categorical = NULL,
  sample_frac = 1,
  extras = NULL,
  ...
)

ts_dataset(
  data,
  timesteps,
  horizon,
  index,
  jump = horizon,
  past_spec = list(x = NULL),
  future_spec = list(y = NULL),
  categorical = NULL,
  sample_frac = 1,
  extras = NULL,
  ...
)
}
\arguments{
\item{data}{(\code{data.frame}) An data.frame-like input object.}

\item{timesteps}{(\code{integer}) Number of timesteps for input tensor.}

\item{horizon}{(\code{integer}) Forecast horizon: number of timesteps for output tensor.}

\item{jump}{(\code{integer}) Jump length. By default: horizon length.}

\item{past_spec}{(\code{list}) Specification of the variables which values from the past will be available.
It should be a list with names representing names of tensors served by dataset, and values being feature indices.}

\item{future_spec}{(\code{list}) Specification of the variableswith known values from the future.
It should be a list with names representing names of tensors served b}

\item{categorical}{(\code{character}) Names of specified column subsets considered as categorical.
They will be provided as integer tensors.}

\item{extras}{(\code{list}) List of extra object to be stored inside the ts_dataset object.}

\item{scale}{(\code{logical} or \code{list}) Scale feature columns. Boolean flag or list with \code{mean} and \code{sd} values.}

\item{sample_fram}{(\code{numeric}) A numeric value > 0. and <= 1 to sample a subset of data.}
}
\description{
Create a time series dataset from a \code{torch_tensor} matrix

Create a time series dataset from a \code{torch_tensor} matrix
}
\note{
If \code{scale} is TRUE, only the input variables are scale and not the outcome ones.

See: \href{https://stats.stackexchange.com/questions/111467/is-it-necessary-to-scale-the-target-value-in-addition-to-scaling-features-for-re}{Is it necessary to scale the target value in addition to scaling features for regression analysis? (Cross Validated)}

If \code{scale} is TRUE, only the input variables are scale and not the outcome ones.

See: \href{https://stats.stackexchange.com/questions/111467/is-it-necessary-to-scale-the-target-value-in-addition-to-scaling-features-for-re}{Is it necessary to scale the target value in addition to scaling features for regression analysis? (Cross Validated)}
}
\examples{
library(dplyr, warn.conflicts = FALSE)
library(torchts)

weather_pl_tensor <-
  weather_pl \%>\%
  filter(station == "TRN") \%>\%
  select(-station, -rr_type) \%>\%
  as_tensor(date)

# We obtained a matrix (i.e. tabular data in the form of 2-dimensional tensor)
dim(weather_pl_tensor)

weather_pl_dataset <-
   ts_dataset(
     data = weather_pl_tensor,
     timesteps = 28,
     horizon = 7,
     past_spec = list(x = 2:7),
     future_spec   = list(y = 1),
     scale = TRUE
   )

weather_pl_dataset$.getitem(1)

library(dplyr, warn.conflicts = FALSE)
library(torchts)

tarnow_temp <-
  weather_pl \%>\%
  filter(station == 'TRN') \%>\%
  arrange(date)

weather_pl_dataset <-
   ts_dataset(
     data = tarnow_temp,
     timesteps = 28,
     horizon = 7,
     past_spec = list(x_num = c('tmax_daily', 'tmin_daily')),
     future_spec   = list(y = 'tmax_daily')
   )

debugonce(weather_pl_dataset$.getitem)
weather_pl_dataset$.getitem(1)

}
