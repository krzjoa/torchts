% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rnn-module.R
\name{model_rnn}
\alias{model_rnn}
\title{A configurable recurrent neural network model}
\usage{
model_rnn(
  layer = nn_gru,
  input_size,
  output_size,
  hidden_size,
  horizon = 1,
  final_module = nn_linear(hidden_size, output_size * horizon),
  dropout = 0,
  batch_first = TRUE
)
}
\arguments{
\item{layer}{(\code{nn_module}) A recurrent \code{torch} layer.}

\item{input_size}{(\code{integer}) Input size.}

\item{output_size}{(\code{integer}) Output size (number of target variables).}

\item{hidden_size}{(\code{integer}) A size of recurrent hidden layer.}

\item{horizon}{(\code{integer}) Horizon size. How many steps ahead produce from the last n steps?}

\item{final_module}{(\code{nn_module}) If not null, applied instead of default linear layer.}

\item{dropout}{(\code{logical}) Use dropout.}

\item{batch_first}{(\code{logical}) Channel order.}
}
\description{
New features will be added in near featre, e.g. categorical feature handling and so on.
}
\examples{
library(dplyr, warn.conflicts = FALSE)
library(torch)
library(torchts)

# Preparing data
weather_dl <-
  weather_pl \%>\%
  filter(station == "TRN") \%>\%
  select(date, tmax_daily) \%>\%
  as_ts_dataloader(
    tmax_daily ~ date,
    timesteps = 30,
    batch_size = 32
  )

# Creating a model
rnn_net <-
  model_rnn(
    input_size  = 1,
    output_size = 1,
    hidden_size = 10
  )

print(rnn_net)

# Prediction example on non-trained neural network
batch <-
  dataloader_next(dataloader_make_iter(weather_dl))

rnn_net(batch$x)

}
